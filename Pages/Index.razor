@page "/"
@using SEP6_Blazor.Models
@using SEP6_Blazor.Data

@inject NavigationManager Navigation
@inject IProductionService ProductionService;

<PageTitle>Index</PageTitle>

<div class="main-content-article">
    <SimpleSearchBar @bind-Result="SearchResults" @bind-Actors="SearchResultsActors" @bind-ComplexResult="ComplexSearchResults"/>

    @if (SearchResults == null)
    {
    }
    else if (SearchResults.ProductionResults.Count > 0)
    {
        SearchResultsActors = null;
        ComplexSearchResults = null;

        <div class="content">
            <div class="content-header-title">
                <span>Search Results</span>
            </div>
            <ul class="hs full">
                @foreach (var result in SearchResults.ProductionResults)
                {
                    <ProductionPosterItem result="result"/>
                }
            </ul>
        </div>
    }
    @if (SearchResultsActors == null)
    {
    }
    else if (SearchResultsActors.Count > 0)
    {
        ComplexSearchResults = null;
        SearchResults = null;

        <div class="content">
            <div class="content-header-title">
                <span>Search Results - Actors</span>
            </div>
            <ul class="hs full">
                @foreach (var result in SearchResultsActors)
                {
                    <PersonPosterItem personResult="result"/>
                }
            </ul>
        </div>
    }
    @if (ComplexSearchResults == null)
    {
    }
    else if (ComplexSearchResults.actorResuls.Count > 0 ||
             ComplexSearchResults.movieResults.ProductionResults.Count > 0 ||
             ComplexSearchResults.tvSeriesResult.ProductionResults.Count > 0)
    {
        SearchResults = null;
        SearchResultsActors = null;

        <div class="content">
            @if (ComplexSearchResults.actorResuls.Count > 0)
            {
                <div class="content-header-title">
                    <span>Search Results - Actors</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in ComplexSearchResults.actorResuls)
                    {
                        <PersonPosterItem personResult="result"/>
                    }
                </ul>
            }
            @if (ComplexSearchResults.movieResults.ProductionResults.Count > 0)
            {
                <div class="content-header-title">
                    <span>Movie Search Results</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in ComplexSearchResults.movieResults.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }
            @if (ComplexSearchResults.tvSeriesResult.ProductionResults.Count > 0)
            {
                <div class="content-header-title">
                    <span>TV Series Search Results</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in ComplexSearchResults.tvSeriesResult.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }
        </div>
    }


    @if (PopularProductions == null)
    {
        <p>Loading...</p>
    }
    else
    {
        <div class="content">
            @if (PopularProductions.ProductionResults.Count == 0)
            {
                <p>Nothing to show :(</p>
            }
            else
            {
                <div class="content-header-title">
                    <span>Popular Movies</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in PopularProductions.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }

            @if (UpcomingMovies.ProductionResults.Count == 0)
            {
                <p>Nothing to show :(</p>
            }
            else
            {
                <div class="content-header-title">
                    <span>Upcoming Movies</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in UpcomingMovies.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }

            @if (TopRatedProductions.ProductionResults.Count == 0)
            {
                <p>Nothing to show :(</p>
            }
            else
            {
                <div class="content-header-title">
                    <span>Top Rated Movies</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in TopRatedProductions.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }
        </div>
    }


</div>


@code
{
    private Results? SearchResults { get; set; } = new Results();
    private List<Person>? SearchResultsActors { get; set; } = new List<Person>();
    private ComplexResult? ComplexSearchResults { get; set; } = new ComplexResult(new Results(), new Results(), new List<Person>());
    private bool queryMade { get; set; }

    private Results PopularProductions { get; set; }
    private Results UpcomingMovies { get; set; }
    private Results TopRatedProductions { get; set; }
    private Results LatestProductions { get; set; }

    protected override async Task OnInitializedAsync()
    {
        PopularProductions = await ProductionService.GetPopularProductions("movie");
        UpcomingMovies = await ProductionService.GetUpcomingMovies();
        TopRatedProductions = await ProductionService.GetTopRatedProduction("movie");
        LatestProductions = await ProductionService.GetLatestProductions("movie");
    }

    protected override void OnInitialized()
    {
        SearchResults.ProductionResults = new List<Production>();
    }
}