@page "/"
@using SEP6_Blazor.Models
@using SEP6_Blazor.Data

@inject NavigationManager Navigation
@inject IProductionService ProductionService;

<PageTitle>Index</PageTitle>

<div class="main-content-article">
    <SimpleSearchBar @bind-ComplexResult="ComplexSearchResults"/>

    @if (ComplexSearchResults.actorResuls.Count > 0 ||
         ComplexSearchResults.movieResults.ProductionResults.Count > 0 ||
         ComplexSearchResults.tvSeriesResult.ProductionResults.Count > 0)
    {
        <div class="content">
            @if (ComplexSearchResults.actorResuls.Count > 0)
            {
                <div class="content-header-title">
                    <span>Search Results - Actors</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in ComplexSearchResults.actorResuls)
                    {
                        <PersonPosterItem personResult="result"/>
                    }
                </ul>
            }
            @if (ComplexSearchResults.movieResults.ProductionResults.Count > 0)
            {
                <div class="content-header-title">
                    <span>Movie Search Results</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in ComplexSearchResults.movieResults.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }
            @if (ComplexSearchResults.tvSeriesResult.ProductionResults.Count > 0)
            {
                <div class="content-header-title">
                    <span>TV Series Search Results</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in ComplexSearchResults.tvSeriesResult.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }
        </div>
    }

    @if (PopularProductions == null)
    {
        <div class="loader-holder">
            <div class="loader"></div>
        </div>
    }
    else
    {
        <div class="content">

            @if (PopularProductions.ProductionResults.Count > 0)
            {
                <div class="content-header-title">
                    <span>Popular Productions</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in PopularProductions.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }

            @if (TopRatedProductions.ProductionResults.Count > 0)
            {
                <div class="content-header-title">
                    <span>Top Rated Production</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in TopRatedProductions.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }

            @if (LatestProduction.Id != 0)
            {
                <div class="content-header-title">
                    <span>Latest Production</span>
                </div>
                <ul class="hs full">
                    <ProductionPosterItem result="@LatestProduction"/>
                </ul>
            }
        </div>
    }


</div>


@code
{
    private ComplexResult ComplexSearchResults { get; set; } = new ComplexResult(new Results(), new Results(), new List<Person>());

    private Results PopularProductions { get; set; } = new Results();
    private Results TopRatedProductions { get; set; } = new Results();
    private Production LatestProduction { get; set; } = new Production();

    protected override async Task OnInitializedAsync()
    {
        PopularProductions = await ProductionService.GetPopularProductions("movie");
        TopRatedProductions = await ProductionService.GetTopRatedProduction("movie");
        LatestProduction = await ProductionService.GetLatestProduction("movie");
    }

    protected override void OnInitialized()
    {
    }
}