@page "/ActorInfoPage/{id}"
@using SEP6_Blazor.Models
@using SEP6_Blazor.Data

@inject IActorService ActorService;
@inject NavigationManager Navigation

<div class="main-content-article">
    <div class="content">
        @if (Person == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <div class="header-main">
                <div class="header-image">
                    @if (Person.ProfilePath == null)
                    {
                        <img src="Assets/user.svg" alt="actor-poster" class="poster-image">
                    }
                    else
                    {
                        <img src="https://image.tmdb.org/t/p/original/@Person.ProfilePath" alt="movie-poster" class="poster-image">
                    }
                </div>
                <div class="header-desc-text header-name">@Person.Name</div>
                @if (Person.PlaceOfBirth != null)
                {
                    <p class="header-desc-text header-birthplace">Born in @Person.PlaceOfBirth</p>
                }
                @if (Person.Biography != null)
                {
                    <p class="header-desc-text">@Person.Biography</p>
                }
            </div>
            <div class="content-header-title">
                <span>Movie Roles</span>
            </div>
            <div>
                @if (MovieCredits.Roles.Count > 0)
                {
                    @foreach (var result in MovieCredits.Roles)
                    {
                        <div class="crew-member">
                            <span class="crew-member-name">@result.Character</span>
                            <span class="crew-member-movie" onclick="@(() => GoToDetailsPage(result.Id, "movie"))"> in "@result.OriginalTitle"</span>
                        </div>
                    }
                }
                else
                {
                    <div class="crew-member">No roles found.</div>
                }

            </div>

            <div class="content-header-title">
                <span>TV Series Roles</span>
            </div>
            <div>
                @if (TVCredits.Roles.Count > 0)
                {
                    @foreach (var result in TVCredits.Roles)
                    {
                        <div class="crew-member">
                            <span class="crew-member-name">@result.Character</span>
                            <span class="crew-member-movie" onclick="@(() => GoToDetailsPage(result.Id, "tv"))"> in "@result.OriginalName"</span>
                        </div>
                    }
                }
                else
                {
                    <div class="crew-member">No roles found.</div>
                }
            </div>
        }
    </div>
</div>

@code {

    [Parameter]
    public string Id { get; set; }

    private Person Person { get; set; }
    private MovieCredits MovieCredits { get; set; }
    private MovieCredits TVCredits { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Person = await ActorService.GetPerson(Id);
        MovieCredits = await ActorService.GetMovieCredits(Id);
        TVCredits = await ActorService.GetTVCredits(Id);
    }

    private void GoToDetailsPage(int id, string type)
    {
        Navigation.NavigateTo("/MovieInfoPage/" + id + "/" + type);
    }

}