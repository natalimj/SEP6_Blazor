@page "/TVSeriesPage"
@using SEP6_Blazor.Models
@using SEP6_Blazor.Data

@inject IProductionService ProductionService;

<div class="main-content-article">
    <MultiSearchBar @bind-ComplexResult="ComplexSearchResults" Type="tv"/>

    @if (ComplexSearchResults.ProductionResults.ProductionResults.Count > 0)
    {
        <div class="content">
            <div class="content-header-title">
                <span>Discover TV Series - Search Results</span>
            </div>
            <ul class="hs full">
                @foreach (var result in ComplexSearchResults.ProductionResults.ProductionResults)
                {
                    <ProductionPosterItem result="result"/>
                }
            </ul>

            @if (ComplexSearchResults.SimilarResults.ProductionResults.Count > 0)
            {
                <div class="content-header-title">
                    <span>Similar TV Series for Search result</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in ComplexSearchResults.SimilarResults.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }
            @if (ComplexSearchResults.RecommendedResults.ProductionResults.Count > 0)
            {
                <div class="content-header-title">
                    <span>Recommended TV Series for Search result</span>
                </div>
                <ul class="hs full">
                    @foreach (var result in ComplexSearchResults.RecommendedResults.ProductionResults)
                    {
                        <ProductionPosterItem result="result"/>
                    }
                </ul>
            }
        </div>
    }

    <div class="content">
        @if (PopularProductions.ProductionResults.Count > 0)
        {
            <div class="content-header-title">
                <span>Popular TV Series</span>
            </div>
            <ul class="hs full">
                @foreach (var result in PopularProductions.ProductionResults)
                {
                    <ProductionPosterItem result="result"/>
                }
            </ul>
        }
        @if (TopRatedProductions.ProductionResults.Count > 0)
        {
            <div class="content-header-title">
                <span>Top Rated TV Series</span>
            </div>
            <ul class="hs full">
                @foreach (var result in TopRatedProductions.ProductionResults)
                {
                    <ProductionPosterItem result="result"/>
                }
            </ul>
        }
        @if (LatestProduction.Id != 0)
        {
            <div class="content-header-title">
                <span>Latest TV Show</span>
            </div>
            <ul class="hs full">
                <ProductionPosterItem result="@LatestProduction"/>
            </ul>
        }
    </div>
</div>

@code {
    private ComplexResultMultisearch ComplexSearchResults { get; set; } = new ComplexResultMultisearch(new Results(), new Results(), new Results());

    private Results PopularProductions { get; set; } = new Results();
    private Results TopRatedProductions { get; set; } = new Results();
    private Production LatestProduction { get; set; } = new Production();

    protected override void OnInitialized()
    {
        ComplexSearchResults.ProductionResults.ProductionResults = new List<Production>();
    }

    protected override async Task OnInitializedAsync()
    {
        PopularProductions = await ProductionService.GetPopularProductions("tv");
        TopRatedProductions = await ProductionService.GetTopRatedProduction("tv");
        LatestProduction = await ProductionService.GetLatestProduction("tv");
    }

}